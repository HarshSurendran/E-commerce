<!-- Shop Cart Section Begin -->
<head>
    <style>
        .shop__cart__table thead th {
            font-size: 18px;
            color: #111111;
            font-weight: 600;
            text-transform: uppercase;
            padding: 5px !important;
        }
    </style>
</head>
    <section class="shop-cart spad">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="shop__cart__table">
                        <table class="text-center">
                            <thead style="background-color: #e5aa3b;">
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#if cart}}
                                {{#each cart}}
                                <tr>
                                    <td class="cart__product__item text-start ">
                                        <img width="90px" height="90px" src="{{this.productVarient_id.images.[0]}}" alt="">
                                        <div class="cart__product__item__title">
                                            <h6>{{this.productVarient_id.product_id.name}}</h6>
                                            <div class="rating">
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                            </div>
                                        </div>
                                    </td>
                                    {{#if this.productVarient_id.originalprice}}
                                    <td class="cart_price">
                                        <div class="product__details__price mb-0">{{this.productVarient_id.price}}<span>Rs {{this.productVarient_id.originalprice}}</span></div>                                  
                                    </td>
                                    {{else}}                                    
                                    <td class="cart_price">
                                        <div class="product__details__price mb-0 " >{{this.productVarient_id.price}}</div>  
                                    </td>
                                    {{/if}}
                                    <td style="width: 7rem;" class="cart__quantity ">
                                        {{!-- <div class="pro-qty quantity123">
                                            <input type="number" class="quantity-input" value="{{this.quantity}}">
                                            <span class="inc qtybtn">+</span>
                                        </div> --}}
                                        
                                        <div class="input-group quantity">
                                            <button class="btn btn-light   dec qtybtn" type="button">-</button>
                                            <input id="quantity{{this._id}}" type="text" style="" class="form-control quantity-input border-0 text-center"  data-id="{{this._id}}" value="{{this.quantity}}" min="1" disabled >
                                            <button class="btn btn-light  inc qtybtn" type="button">+</button>
                                        </div>

                                    </td>
                                    <td id="carttotal{{@index}}" class="">
                                        <div class="product__details__price mb-0 cart_total" >{{multiply this.quantity this.productVarient_id.price}}</div>  
                                    </td>
                                    <a id="deleteCartBut" ><td class="cart__close deleteCartBut" data-id="{{this._id}}"><span class="icon_close"></span></td>
                                </tr></a>
                                {{/each}}
                                {{else}}
                                <p class="text-center ">Your cart is empty please add items to the cart.</p>
                                {{/if}}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="cart__btn">
                        <a href="/api/v1/products/list/all">Continue Shopping</a>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6">
                    <div class="cart__btn update__btn">
                        <a href="/api/v1/users/cart"><span class="icon_loading"></span> Update cart</a>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="discount__content">
                        <h6>Apply Coupons</h6>
                        <form class="w-100 mt-3">
                            <input id="couponInput" type="text" placeholder="Enter your coupon code">
                            {{!-- <button type="submit" class="site-btn">Apply</button> --}}
                            <button type="button" id="showCouponButton" class="site-btn " data-bs-toggle="modal" data-bs-target="#exampleModal">
                            Show available coupons
                            </button>
                            <button type="button" class="site-btn d-none" id="removeCouponButton">Remove Coupon</button> 
                        </form>
                        <!-- Modal -->
                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-scrollable">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="exampleModalLabel">Coupons</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                <div class="modal-body" id="couponList">
                                
                                </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                        <button id="applyCouponBtn" type="button" class="btn btn-primary" data-bs-dismiss="modal">Apply</button>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
                <div class="col-lg-4 offset-lg-2">
                    <div class="cart__total__procced" >
                        <h6 class="text-center ">Cart total</h6>
                        <ul>
                            <li>Subtotal <span id="subtotal">{{total}}</span></li>
                            <li>Total discount <span id="discount">0</span></li>
                            <li id="total">Total <span id="grandtotal">{{total}}</span></li>
                        </ul>
                        {{#if cart}}
                        <form action="/api/v1/users/checkout" method="post">
                        <input type="hidden" id="couponForProceedToPayment" name="couponCode" value="">
                        <button type="submit" class="primary-btn border-0 w-100">Proceed to checkout</button>
                        </form>
                        {{/if}}
                    </div>
                </div>
            </div>
        </div>
    </section>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    let coupons

    //apply coupon function
    async function applyCoupon(couponCode) {
            for (const coupon of coupons) {
                if (coupon.code === couponCode) {
                    const subTotal = parseInt(document.getElementById("subtotal").innerText);
                    if (coupon.minamount > subTotal || coupon.userlimit <= 0) {
                        console.log("Entered coupon invalid condition");
                        return false;
                    }
                    console.log("this is totalprice before applying coupon and discount price", subTotal, coupon.discount);
                    const couponForProceedToPayment = document.getElementById("couponForProceedToPayment");
                    couponForProceedToPayment.value = couponCode;
                    console.log("This is coupon input", couponForProceedToPayment.value);
                    const totaldiscount = document.getElementById("discount");
                    totaldiscount.textContent = coupon.discount;
                    const totalPrice = subTotal - coupon.discount;
                    console.log("this is totalprice after applying coupon", totalPrice);
                    const grandTotal = document.getElementById("grandtotal");
                    grandTotal.textContent = totalPrice;
                    return true;
                }
            }
            return false;
        }

    //proceed to payment
    /*const proceedToCheckoutButton = document.getElementById("proceedToCheckoutButton");
    proceedToCheckoutButton.addEventListener("click", (event)=>{
        event.preventDefault();
        const couponInput = document.getElementById("couponInput");
        const couponCode = couponInput.value;
        console.log("this is coupon code", couponCode);
        
        fetch("/api/v1/users/checkout",{
            method: "POST",
            headers: {
                "content-type": "application/json"
            },
            body: JSON.stringify({
                couponCode,
                
            })
        })
    })*/

    //Delete item from cart
    document.addEventListener("DOMContentLoaded",()=>{
        const deleteButton = document.querySelectorAll(".deleteCartBut");
        deleteButton.forEach((element)=>{
            element.addEventListener("click", ()=>{
                const id = element.getAttribute("data-id");
                console.log("This  is cart id", id)
                    //const confirmation = window.confirm("Are you sure you want to delete this item from the cart?");
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes, delete"
                    }).then((result) => {
                        if (result.isConfirmed) { 
                            fetch("/api/v1/users/cart", {
                                method: "DELETE",
                                headers: {
                                    "content-type": "application/json"
                                },
                                body : JSON.stringify({
                                    id
                                })
                            }).then( (res)=>{
                                if(!res.ok){
                                    console.log("somethign wronf")
                                    return 
                                }
                                
                                location.reload();
                            })    
                            /*Swal.fire({
                            title: "Deleted!",
                            text: "Your file has been deleted.",
                            icon: "success"                
                            });*/                            
                        }   
                    });
                /*if(confirmation){
                    fetch("/api/v1/users/cart", {
                        method: "DELETE",
                        headers: {
                            "content-type": "application/json"
                        },
                        body : JSON.stringify({
                            id
                        })
                    }).then( (res)=>{
                        if(!res.ok){
                            console.log("somethign wronf")
                            return 
                        }
                        
                        location.reload();
                    })
                }*/
            });
        });

    })

    //Total amount calculations
    async function grandTotal(){
        let totalPrice=0;
        const cartTotal = document.querySelectorAll(".cart_total");
        console.log("this isc carttotal", cartTotal);
        cartTotal.forEach((price)=>{
            totalPrice = totalPrice+ parseInt(price.textContent);
        })
        const subTotal = document.getElementById("subtotal");
        subTotal.textContent = totalPrice;
        const couponInput = document.getElementById('couponInput');
        if(couponInput.value){
            const validCoupon = await applyCoupon(couponInput.value);
            console.log("this is valid coupon", validCoupon);
            if(validCoupon){
               
            }else{
                couponInput.value = '';
                removeCouponButton.classList.add('d-none');
                showCouponButton.classList.remove('d-none');
                //alert(`NOTE: Offer limit is reached.`);
                Swal.fire({
                        title: "Coupon code invalid",
                        text: "Sorry, Coupons minimum amount limit reached",
                        icon: "error"
                    });
                location.reload();
            }
        }else{
            const grandTotal = document.getElementById("grandtotal");
            grandTotal.textContent = totalPrice;
        }
    }

    function updateTotal(qty, event){        
        const priceelem = event.target.parentElement.parentElement.parentElement.querySelector(".cart_price");
        const totalpriceelem = event.target.parentElement.parentElement.parentElement.querySelector(".cart_total");    
        const price = parseInt(priceelem.textContent);
        totalprice = qty*price;
        totalpriceelem.textContent = totalprice;        
        grandTotal();
    }

  
    document.querySelectorAll('.qtybtn').forEach((btn) => {
        btn.addEventListener('click', (event) => {                   
            const input = event.target.parentElement.querySelector('.quantity-input');
            const currentValue = parseInt(input.value);
            const increment = event.target.classList.contains('inc') ? 1 : -1;
            const id = input.getAttribute("data-id");
            
            if ((currentValue + increment >= 1) && (currentValue + increment <= 10)) {                
                let qty = currentValue + increment;

                fetch("/api/v1/users/cart",{
                    method : "PATCH",
                    headers: {
                        "content-type" : "application/json"
                    },
                    body: JSON.stringify({
                        id,
                        quantity : qty
                    })
                })
                .then(res=> res.json())
                .then((data)=>{
                    console.log("this is data",data)
                    if(!data.success){
                        input.value = (qty - increment);
                        //return alert("Stock is not available.");
                        return Swal.fire({
                            title: "Out of stock",
                            text: "Sorry, this product is out of stock right now",
                            icon: "error"
                        });
                    }
                    input.value = qty;
                    updateTotal(qty, event); 
                })                
            }
        });
    });


    //coupon
    document.addEventListener('DOMContentLoaded', function() {        
        const showCouponButton = document.getElementById('showCouponButton');
        showCouponButton.addEventListener('click',async function() {           
            await fetch('/api/v1/users/availableCoupons', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                })
            }).then(res => res.json())
            .then(data => {
                console.log("This si rsponse", data)
                if(!data.success){
                    return  Swal.fire({
                        title: "Couldn't Find any Coupons",
                        text: "Sorry, there are no coupons available right now",
                        icon: "question"
                    });
                }
                coupons = data.data.coupons;
            })
            
            const couponList = document.getElementById('couponList');
            couponList.innerHTML = '';
            // Populate modal body with coupons
            coupons.forEach(coupon => {
                const radioBtn = document.createElement('input');
                radioBtn.type = 'radio';
                radioBtn.name = 'coupon';
                radioBtn.value = coupon.code;
                radioBtn.classList.add('me-2');
                couponList.appendChild(radioBtn);

                const label = document.createElement('label');
                label.textContent = `${coupon.name} - ${coupon.discount} - ${coupon.code} - ${coupon.description}`;
                couponList.appendChild(label);
                couponList.appendChild(document.createElement('br'));
            });
        })

        // Add event listener to Apply button
        const applyCouponBtn = document.getElementById('applyCouponBtn');
        applyCouponBtn.addEventListener('click',async function() {
            const selectedCoupon = document.querySelector('input[name="coupon"]:checked');
            if (selectedCoupon) {
                const couponInput = document.getElementById('couponInput');
                couponInput.value = selectedCoupon.value;
                const validCoupon = await applyCoupon(couponInput.value);
                console.log("this is valid coupon", validCoupon);
                if(validCoupon){
                    const removeCouponButton = document.getElementById('removeCouponButton');
                    removeCouponButton.classList.remove('d-none');
                    showCouponButton.classList.add('d-none');
                }else{
                    couponInput.value = '';
                    //alert(`NOTE: This coupon is not valid for this order.`);
                    Swal.fire({
                        title: "Coupon not valid",
                        text: "Sorry, This coupon is not valid for this order.",
                        icon: "error"
                    });
                }
            } else {
                //alert(`NOTE: You didn't select any coupon.`);
                Swal.fire({
                        title: "Coupon not Selected",
                        text: "You have not selected any coupons.",
                        icon: "question"
                    });
            }
        });

        /*async function applyCoupon(couponCode) {
            coupons.forEach(coupon => {
                if(coupon.code === couponCode){
                    const subTotal = document.getElementById("subtotal").innerText;
                    if(coupon.minamount > subTotal || coupon.userlimit <= 0){
                        console.log("Entered coupon invalid condition")
                        return false
                    }
                    console.log("this is totalprice before applyuing coupon and discount prixe", subTotal, coupon.discount);
                    const totaldiscount = document.getElementById("discount");
                    totaldiscount.textContent = coupon.discount;
                    const totalPrice = parseInt(subTotal) - coupon.discount;  
                    console.log("this is totalprice after applyuing coupon", totalPrice);             
                    const grandTotal = document.getElementById("grandtotal");
                    grandTotal.textContent = totalPrice;
                    return true               
                }
            })
        }*/

       

        // Add event listener to Remove button
        const removeCouponButton = document.getElementById('removeCouponButton');
        removeCouponButton.addEventListener('click', function() {
            const couponInput = document.getElementById('couponInput');
            couponInput.value = '';
            removeCouponButton.classList.add('d-none');
            showCouponButton.classList.remove('d-none');
            location.reload();
        });


        
        
    });

</script>