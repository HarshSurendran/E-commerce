<head>
    <style>
    /* Notification styles */
    .notification {
      display: none;
      position: fixed;
      top: 10px;
      right: 40%;
      background-color: #4CAF50;
      color: #fff;
      padding: 15px;
      border-radius: 5px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }
    </style>
    
</head>

<main class="main-wrap">            
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Categories</h2>
                <p>Add, edit or delete a category</p>
            </div>
            <div>
                <input type="text" placeholder="Search Categories" class="form-control bg-white" />
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form>
                            <div class="mb-4">
                                <label for="categoryName" class="form-label">Name</label>
                                <input type="text" placeholder="Type here" class="form-control" id="categoryName" />
                                <p id="catAlert" class="text-danger"></p>
                            </div>
                            {{!-- <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" class="form-control"></textarea>
                            </div> --}}
                            <div class="d-grid d-flex justify-content-center ">
                                <button type="button" id="addCatButton" class="btn btn-primary text-center ">Create category</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-9">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr class="text-center ">
                                        {{!-- <th class="text-center">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="" />
                                            </div>
                                        </th> --}}
                                        <th>Sl.No</th>
                                        <th>Name</th>
                                        <th>Created</th>
                                        {{!-- <th>Description</th>
                                        <th>Slug</th>
                                        <th>Order</th> --}}
                                        <th >Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each category}}
                                    <tr class="text-center">
                                        {{!-- <td class="text-center">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="" />
                                            </div>
                                        </td> --}}
                                        <td >{{inc @index}}</td>


                                        <td ><input id="category{{this._id}}" disabled class="d-block border-0 category " type="text"  value="{{this.category}}"></td>
                                        {{!-- <td id="editcategory" class="d-none"><b><input class="border-0 " type="text" value="{{this.category}}"></b></td> --}}


                                        <td>{{this.date}}</td>
                                        {{!-- <td>Cake & Milk</td>
                                        <td>/cake</td>
                                        <td>1</td> --}}
                                        <td class="text-end">
                                            <div>
                                                {{!-- <a href="edit-caegory/{{this._id}}" class="btn btn-sm font-sm rounded btn-brand"> <i class="material-icons md-edit"></i> Edit </a> --}}


                                                <a id="editbutton" data-id="{{this._id}}" class="btn btn-sm font-sm rounded btn-brand d-inline-block editbutton "> <i class="material-icons md-edit"></i> Edit </a>
                                                <a id="savebutton" data-id="{{this._id}}" class="btn btn-sm font-sm rounded btn-brand d-none savebutton "> <i class="material-icons md-save"></i> Save </a>
                                                <a href="#" class="btn btn-sm font-sm rounded btn-danger deleteButton" data-id="{{this._id}}"><i class="material-icons md-delete_forever"></i>Delete</a>
                                            </div>
                                            <!-- dropdown //end -->               
                                        </td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- .col// -->
                </div>
                <!-- .row // -->
            </div>
            <!-- card body .// -->
        </div>
        <!-- card .// -->
        {{!-- Best Selling category --}}
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Best selling Categories</h2>
                
            </div>            
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">                    
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr class="text-center ">
                                        <th>Sl.No</th>
                                        <th>Name</th>
                                        <th>Sold</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {{#each bestSellingCategories}}
                                    <tr class="text-center">
                                        <td >{{inc @index}}</td>
                                        <td>{{this._id}}</td>
                                        <td>{{this.totalSoldQuantity}}</td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- .col// -->
                </div>
                <!-- .row // -->
            </div>
            <!-- card body .// -->
        </div>
        
        <div id="notification" class="notification"></div>
    </section>    
</main>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const catAlert = document.getElementById("catAlert");
    const addCatButton = document.getElementById("addCatButton");
    const editButton = document.querySelectorAll(".editbutton");
    const saveButton = document.querySelectorAll(".savebutton");
    const categoryElem = document.querySelectorAll(".category");
    const block = "d-inline-block"
    const none = "d-none"

    function showNotification(message) {
        const notificationElement = document.getElementById('notification');
        notificationElement.textContent = message;
        notificationElement.style.display = 'block';

        // Hide the notification after 5 seconds
        setTimeout(() => {
        notificationElement.style.display = 'none';
        }, 2000);
    }

    function addCategory() {
    catAlert.innerText = "";
    const category = document.getElementById("categoryName").value;

    if(category.trim()==""){
        catAlert.className="text-danger text-center"
        catAlert.innerText="Category name can't be empty";
        return
    }

    if(category.length > 20){
        catAlert.className="text-danger text-center"
        catAlert.innerText="Length of the category shouldn't be greater than 20 letters.";
        return
    }

    fetch("/api/v1/admin/category",{
        method: "POST",
        headers: {
            "content-type" : "application/json"
        },
        body: JSON.stringify({
            category
        })
    })
    .then( (response)=>{
        if(!response.ok){
            catAlert.innerText="Category not added. Please try again"
            return
        }
        catAlert.className="text-success text-center "
        catAlert.innerText = "Category added successfully"
        location.reload();
    })
    }
    addCatButton.addEventListener("click", addCategory);

    editButton.forEach((element,index)=>{
        element.addEventListener("click", ()=>{        
            console.log("index",index)
            categoryElem[index].disabled = !categoryElem[index].disabled;
            element.classList.replace(block,none);
            saveButton[index].classList.replace(none,block);
        })
    });

    saveButton.forEach((element,index)=>{
        element.addEventListener("click", ()=>{
            let id = element.getAttribute("data-id");
            let value = document.getElementById(`category${id}`).value
            console.log(value);
            
            fetch("/api/v1/admin/category", {
                method: "PATCH",
                headers: {
                    "content-type": "application/json"
                },
                body: JSON.stringify({
                   category : value,
                   id
                })
            })
            .then(response => response.json())
            .then((data) => {
                if (data.success) {
                    //showNotification("Details saved");
                    categoryElem[index].disabled = !categoryElem[index].disabled;
                    element.classList.replace(block,none);
                    editButton[index].classList.replace(none,block);
                    console.log(data);
                    return
                }
                showNotification("Category already exists.");                
                setTimeout(()=>{
                location.reload();      
                },500);
            });
        })
    })
   
    const deleteButton = document.querySelectorAll(".deleteButton");
    deleteButton.forEach((element)=>{
        element.addEventListener("click", (event)=>{
            const _id = event.target.getAttribute("data-id");           
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete"
            }).then((result) => {
                if (result.isConfirmed) {     
                    Swal.fire({
                    title: "Deleted!",
                    text: "Your file has been deleted.",
                    icon: "success"                
                    });
                    return location.href = `/api/v1/admin/delete-category/${_id}`;   
                }   
            });
        })
    })

</script>